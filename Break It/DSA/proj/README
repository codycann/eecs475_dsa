whole compile line:
g++ main.cpp uberzahl.cpp SignAndVerify.cpp SHA1.cpp keygen.cpp -lgmpxx -lgmp =c++11 -o DSA

we use c++11 and mpz_class


we do not have main - call our functions through the autograder/your program


list of functions:
	Comments:
	  - Everything is in vectors. All tests/inputs (if there are multiple) will 
	  	be done together in one call
	  - a different private key is needed for each input/message (corresponded 
	  	by same index in the vectors)
	  - a different public key will be generated with each input (corresponded 
	  	by same index in the vectors)
	  - call srand() if you want

	R: x - your private key generated randomly(size dosn't matter 
				we'll just mod it)
	M: x - x will be moded with q
	E: outputs the public key (p, q, g, y) 
	vector<pubkey> keygen(vector<uberzahl> & x);
	
	
	
	R: messages - vector of your messages you want to sign 
				- each message should be a string
	   privateKeys - vector of privatekeys (this is you vector of x's)
	   publicKeys - vector of pubkeys (this is generated by keygen function above)
	M: 
	E: returns a vector of signed messages 
	vector<sig> sign(vector<string> messages, vector<uberzahl> privateKeys, <pubkey> publicKeys);




	R: signitures - vector of signed mesages (this is generated by sign function)
	   keys - vector of pubkeys (this is generated by keygen function)
	   message - vector of unsigned messages
	M: 
	E: unsigns signitures and check if they are the same as message
	   returns a vector<bool> where each true corresponds to the message + 
	   		signiture that index are the same
	vector<bool> verify (vector<sig> signitures, vector<pubkey> keys, vector<string> message);
	
	
	
	
list of structs:
	pubkey - p - uberzahl - same in all cases
			 q - uberzahl - same in all cases
			 g - uberzahl - same in all cases
			 y - uberzahl - depends on the private key x
			 
	sig - r - uberzahl
		  s - uberzahl
		  
		  
		  
		  
Inputs + outputs:
	- input everything in vectors! (even if they are vectors of size 1)
	- messages should be strings
	- outputs bool based on whether or not unsigned signatures is the same as 
      message (the bools are in a vector too!)
    - all vectors should be corresponded with each other through their indexes
		  
		  
		  
		  
other comments:		 
	- in main.cpp: there is a commented out example on how to use our functions
		   
	
	
	
	
